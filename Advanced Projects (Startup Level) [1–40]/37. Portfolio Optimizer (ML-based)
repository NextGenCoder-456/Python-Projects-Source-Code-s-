import numpy as np
import pandas as pd
from scipy.optimize import minimize

# Example: 3-stock portfolio
returns = np.array([
    [0.01, 0.02, 0.015],
    [0.02, 0.01, 0.017],
    [0.015, 0.018, 0.016]
])
mean_returns = returns.mean(axis=0)
cov_matrix = np.cov(returns.T)

def portfolio_variance(weights):
    return weights.T @ cov_matrix @ weights

constraints = {'type': 'eq', 'fun': lambda x: np.sum(x) - 1}
bounds = tuple((0, 1) for _ in range(3))
initial = [1/3]*3

opt = minimize(portfolio_variance, initial, method='SLSQP', bounds=bounds, constraints=constraints)
print("Optimized Weights:", opt.x)
